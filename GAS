 function myArray(){
    let sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("配列練習用");

    let data = [
      ["Hello GAS","Hello GAS","Hello GAS"],
      ["Hello GAS","Hello GAS","Hello GAS"],
      ["Hello GAS","Hello GAS","Hello GAS"],
      ];
    sheet.getRange(3,2,data.length,data[0].length).setValues(data);
  }

★↑ sheet.getRange(3,2,data.length,data[0].length).setValues(data);
3，2は開始位置（3行目の2列目から始める）　data.lengthはdata配列の個数["Hello GAS","Hello GAS","Hello GAS"]が3つあるので3
data[0].lengthはdata配列のindex0つまり["Hello GAS","Hello GAS","Hello GAS"]の中身の個数なので3
setValues(data)はdata配列をセットして下さい、の意味　つまり
３行目2列目から初めて3行、3列にdata配列をセットして下さいの意味


★売上集計
function summaryStoreSales(){
  let stores = {
    "店舗A":"1VQBhDVmRtW-gNZdznjsQU_qpXaLgnyCDDJ0xTAp4feI",
    "店舗B":"1_FVflQ1ePhb0NNwEq7uUsFD1liOdI0zcoHDmCdgVrEU",
    "店舗C":"1YC9xkbxXP-a9lLWHICAbsry6j12VmNCOoCU3ZPY_fd0",
  };

  let sales = [];

  sales.push(["店舗名","金額"]);

  for(let store in stores){

    let sheet = SpreadsheetApp.openById(stores[store]).getSheetByName("1月");
    let range = sheet.getRange(2,5,sheet.getLastRow()-1);
    let values = range.getValues().flat();

    let total = values.reduce(function(sum,element){
      return sum + element;
    },0);

    sales.push([store,total]);
  }
    let summarySheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("店舗別売上");
    summarySheet.clear();
    summarySheet.getRange(1,1,sales.length,sales[0].length).setValues(sales);

  }


★★★
reduce()の使い方

配列 = [1,2,3,4,5];
配列.reduce(function(貯まった値,今の値){
return 何かの処理;
},初期値};

★合計を求める

let numbers = [5, 10, 15, 20, 25];

let total = numbers.reduce(function(sum, element) {
  return sum + element; 
}, 0);

console.log(total); // 期待される出力: 75

★最大値（最小値）を求める

let numbers = [3, 17, 9, 24, 15];

let max = numbers.reduce(function(maxValue, element) {
  return element > maxValue ? element : maxValue; // 大きい方を maxValue に残す(値の更新)
}, numbers[0]); // 初期値は最初の要素（3）

console.log(max); // 期待される出力: 24

element > maxValue ? element : maxValue; ここは三項演算子という構文
条件式 ? 条件が真の場合の値 : 条件が偽の場合の値;

★配列の中の文字列を1つにまとめる

let words = ["Hello", "world", "this", "is", "JavaScript"];

let result = words.reduce(function(accumulator,currentValue){
  return accumulator + " " + currentValue;
}," ");

console.log(result);//出力: "HelloworldthisisJavaScript"

★配列の中身の平均を求める
let scores = [80, 90, 100, 70, 85];

let total = scores.reduce(function(num,element){
  return sum + element;
},0);

let average = total / scores.length;

console.log(average);

★オブジェクトの合計を求める

let salesData = [
  { store: "店舗A", sales: 100 },
  { store: "店舗B", sales: 200 },
  { store: "店舗C", sales: 150 }
];

let totalSales = salesData.reduce(function(sum,element){

  return sum + element.sales;//処理中の要素（オブジェクト）の値
},0);





